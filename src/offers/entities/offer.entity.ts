import { Entity, Column, PrimaryGeneratedColumn, ManyToOne, JoinColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';
import { Buyer } from '../../buyers/entities/buyer.entity';
import { Produce } from '../../produce/entities/produce.entity';
import { OfferStatus } from '../enums/offer-status.enum';

@Entity('offers')
export class Offer {
  @PrimaryGeneratedColumn('uuid')
  id: string;

  @Column()
  buyerId: string;

  @ManyToOne(() => Buyer)
  @JoinColumn({ name: 'buyer_id' })
  buyer: Buyer;

  @Column()
  produceId: string;

  @ManyToOne(() => Produce)
  @JoinColumn({ name: 'produce_id' })
  produce: Produce;

  @Column('decimal', { precision: 10, scale: 2 })
  pricePerUnit: number;

  @Column({ type: 'enum', enum: OfferStatus })
  status: OfferStatus;

  @Column({ default: false })
  isAutoGenerated: boolean;

  @Column({ type: 'jsonb', nullable: true })
  metadata: {
    qualityId?: string;
    qualityGrade?: string;
    autoGeneratedAt?: Date;
    priceHistory?: Array<{
      oldPrice: number;
      newPrice: number;
      updatedAt: Date;
    }>;
    lastPriceUpdate?: Date;
    expiryReason?: string;
    expiryMetadata?: any;
  };

  @Column({ type: 'timestamp', nullable: true })
  expiredAt: Date;

  @CreateDateColumn()
  createdAt: Date;

  @UpdateDateColumn()
  updatedAt: Date;
} 